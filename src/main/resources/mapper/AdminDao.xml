<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bibu.dao.AdminDao">

    <resultMap type="com.bibu.entity.Admin" id="AdminMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="alias" column="alias" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AdminMap">
        select
          id, user_name, password, role_id, alias, email, status
        from admin
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AdminMap">
        select
        id, user_name, password, role_id, alias, email, status
        from admin
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="alias != null and alias != ''">
                and alias = #{alias}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from admin
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="roleId != null">
                and role_id = #{roleId}
            </if>
            <if test="alias != null and alias != ''">
                and alias = #{alias}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into admin(user_name, password, role_id, alias, email, status)
        values (#{userName}, #{password}, #{roleId}, #{alias}, #{email}, #{status})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into admin(user_name, password, role_id, alias, email, status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.password}, #{entity.roleId}, #{entity.alias}, #{entity.email},
            #{entity.status})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into admin(user_name, password, role_id, alias, email, status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userName}, #{entity.password}, #{entity.roleId}, #{entity.alias}, #{entity.email},
            #{entity.status})
        </foreach>
        on duplicate key update
        user_name = values(user_name),
        password = values(password),
        role_id = values(role_id),
        alias = values(alias),
        email = values(email),
        status = values(status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update admin
        <set>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="alias != null and alias != ''">
                alias = #{alias},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from admin where id = #{id}
    </delete>

</mapper>

